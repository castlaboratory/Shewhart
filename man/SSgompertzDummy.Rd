% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Gompertz.R
\name{SSgompertzDummy}
\alias{SSgompertzDummy}
\title{SSgompertzDummy: Self-starting Gompertz with dummy term}
\usage{
SSgompertzDummy(x, dummy, Asym, b2, b3, Beta)
}
\arguments{
\item{x}{A numeric vector representing the independent variable.}

\item{dummy}{A numeric or integer vector (0/1) indicating which observations belong
to the "dummy" group. Must have same length as \code{x}.}

\item{Asym}{A numeric parameter representing the asymptotic maximum.}

\item{b2}{A numeric parameter (often related to the rate of growth).}

\item{b3}{A numeric parameter (often related to the time scaling).}

\item{Beta}{A numeric parameter multiplying the dummy (vertical shift).}
}
\value{
A numeric vector of the same length as \code{x} with the modeled values,
  along with attributes for self-starting and gradient calculation.
}
\description{
This self-starting function extends the classic Gompertz model by adding a linear
term for a dummy variable. The expression is:
\deqn{y = \mathrm{Asym} \, e^{-b_2 \cdot e^{-b_3 x}} + \beta \cdot \mathrm{dummy}.}
}
\details{
It allows \code{nls()} to automatically compute initial values for
\code{Asym}, \code{b2}, \code{b3}, and \code{Beta}, so long as your data
and dummy are reasonably set up.


Internally, this function has two parts:
\enumerate{
  \item A model expression: \code{Asym * exp(-b2 * exp(-b3 * x)) + Beta * dummy}.
  \item An \code{initial} function for guessing starting values.
}

The gradient attribute is also defined so that \code{nls()} can use analytical
gradients, potentially improving convergence and performance.
}
\examples{
\dontrun{
# Generate some data
set.seed(123)
n <- 50
x <- seq(1, 10, length.out = n)
dummy_vec <- rep(c(0,1), each = n/2)

# True parameters for simulation:
# Asym = 100, b2 = 2, b3 = 0.3, Beta = 20
# We'll create a "Gompertz" pattern plus 20 for half the data
y <- 100 * exp(-2 * exp(-0.3 * x)) + 20 * dummy_vec + rnorm(n, 0, 3)

df <- data.frame(x = x, y = y, dummy = dummy_vec)

# Fit with nls
fit_dummy <- nls(
  formula = y ~ SSgompertzDummy(x, dummy, Asym, b2, b3, Beta),
  data = df,
  start = list(Asym = 100, b2 = 2, b3 = 0.3, Beta = 0) # or rely on selfStart
)

summary(fit_dummy)
}

}
\seealso{
\code{\link{nls}}, \code{\link{selfStart}}, \code{\link{SSgompertz}}
}
